package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListVolumeResourcesHandlerFunc turns a function with the right signature into a list volume resources handler
type ListVolumeResourcesHandlerFunc func(ListVolumeResourcesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListVolumeResourcesHandlerFunc) Handle(params ListVolumeResourcesParams) middleware.Responder {
	return fn(params)
}

// ListVolumeResourcesHandler interface for that can handle valid list volume resources params
type ListVolumeResourcesHandler interface {
	Handle(ListVolumeResourcesParams) middleware.Responder
}

// NewListVolumeResources creates a new http.Handler for the list volume resources operation
func NewListVolumeResources(ctx *middleware.Context, handler ListVolumeResourcesHandler) *ListVolumeResources {
	return &ListVolumeResources{Context: ctx, Handler: handler}
}

/*ListVolumeResources swagger:route GET /api/v1/volumes listVolumeResources

list volume backend resource types

*/
type ListVolumeResources struct {
	Context *middleware.Context
	Handler ListVolumeResourcesHandler
}

func (o *ListVolumeResources) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListVolumeResourcesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListVolumeResourcesOKBody list volume resources o k body
// swagger:model ListVolumeResourcesOKBody
type ListVolumeResourcesOKBody interface{}
