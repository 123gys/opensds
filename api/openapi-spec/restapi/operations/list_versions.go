package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListVersionsHandlerFunc turns a function with the right signature into a list versions handler
type ListVersionsHandlerFunc func(ListVersionsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListVersionsHandlerFunc) Handle(params ListVersionsParams) middleware.Responder {
	return fn(params)
}

// ListVersionsHandler interface for that can handle valid list versions params
type ListVersionsHandler interface {
	Handle(ListVersionsParams) middleware.Responder
}

// NewListVersions creates a new http.Handler for the list versions operation
func NewListVersions(ctx *middleware.Context, handler ListVersionsHandler) *ListVersions {
	return &ListVersions{Context: ctx, Handler: handler}
}

/*ListVersions swagger:route GET /api/ listVersions

get available API versions

*/
type ListVersions struct {
	Context *middleware.Context
	Handler ListVersionsHandler
}

func (o *ListVersions) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListVersionsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
