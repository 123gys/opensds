package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateVolumeHandlerFunc turns a function with the right signature into a update volume handler
type UpdateVolumeHandlerFunc func(UpdateVolumeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateVolumeHandlerFunc) Handle(params UpdateVolumeParams) middleware.Responder {
	return fn(params)
}

// UpdateVolumeHandler interface for that can handle valid update volume params
type UpdateVolumeHandler interface {
	Handle(UpdateVolumeParams) middleware.Responder
}

// NewUpdateVolume creates a new http.Handler for the update volume operation
func NewUpdateVolume(ctx *middleware.Context, handler UpdateVolumeHandler) *UpdateVolume {
	return &UpdateVolume{Context: ctx, Handler: handler}
}

/*UpdateVolume swagger:route PUT /api/v1/volumes/{resourceType}/{id} updateVolume

update specified volume in specified backend resource

*/
type UpdateVolume struct {
	Context *middleware.Context
	Handler UpdateVolumeHandler
}

func (o *UpdateVolume) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewUpdateVolumeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
