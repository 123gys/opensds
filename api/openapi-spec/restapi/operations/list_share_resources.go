package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListShareResourcesHandlerFunc turns a function with the right signature into a list share resources handler
type ListShareResourcesHandlerFunc func(ListShareResourcesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListShareResourcesHandlerFunc) Handle(params ListShareResourcesParams) middleware.Responder {
	return fn(params)
}

// ListShareResourcesHandler interface for that can handle valid list share resources params
type ListShareResourcesHandler interface {
	Handle(ListShareResourcesParams) middleware.Responder
}

// NewListShareResources creates a new http.Handler for the list share resources operation
func NewListShareResources(ctx *middleware.Context, handler ListShareResourcesHandler) *ListShareResources {
	return &ListShareResources{Context: ctx, Handler: handler}
}

/*ListShareResources swagger:route GET /api/v1/shares listShareResources

list share backend resource types

*/
type ListShareResources struct {
	Context *middleware.Context
	Handler ListShareResourcesHandler
}

func (o *ListShareResources) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListShareResourcesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListShareResourcesOKBody list share resources o k body
// swagger:model ListShareResourcesOKBody
type ListShareResourcesOKBody interface{}
